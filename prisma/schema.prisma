// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User
model User {
  id          String        @id @default(cuid())
  clerkId     String        @unique
  email       String        @unique
  firstName   String?
  lastName    String?
  phone       String?
  createdAt   DateTime      @default(now()) // member since oct 2025 
  updateAt    DateTime      @updatedAt
  Appointment Appointment[]

  @@map("users")
}

//  Doctor 
model Doctor {
  id          String        @id @default(cuid())
  name        String
  email       String        @unique
  phone       String
  speciality  String
  bio         String?
  imageUrl    String
  gender      Gender
  isActive    Boolean       @default(true)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Appointment Appointment[]

  @@map("doctors")
}

// Appointment
model Appointment {
  id        String            @id @default(uuid())
  date      DateTime
  time      String
  duration  Int               @default(30)
  status    AppointmentStatus @default(COMFIRMED)
  notes     String?
  reason    String? // reason for appointment - teeth cleaning , emergency , checkup? etc.
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt

  // Foreign Keys
  userId   String
  doctorId String

  // Relationships
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  doctor Doctor @relation(fields: [doctorId], references: [id], onDelete: Cascade)

  @@map("appointments")
}

// ENUMS
enum Gender {
  MALE
  FEMALE
}

enum AppointmentStatus {
  COMFIRMED
  COMPLETED
}
